// Translation document for the collection
// =======================================
// This file contains the texts
// annotated for translation
//
// Instructions:
// 1. Open the PO file with Poedit
// 2. Press "Update" to update from sources

gettext('01-LEDOscopio');
gettext('02-Start');
gettext('03-Delay');
gettext('04-Patron');
gettext('05-Operaciones');
gettext('06-bloque-sys-delay');
gettext('07-Pulsos');
gettext('08-Flancos');
gettext('01-contador-LEDoscopio');
gettext('Ledoscope. Capture the input signal during the first 4 cycles after circuit initialization');
gettext('Constant bit 0');
gettext('RS-FF-set. RS Flip-flop with priority set');
gettext('D Flip-flop (verilog implementation)');
gettext('2-to-1 Multplexer (1-bit channels)');
gettext('OR2: Two bits input OR gate');
gettext('Two bits input And gate');
gettext('NOT gate (Verilog implementation)');
gettext('Constant bit 1');
gettext('SReg-right-x4: 4 bits Shift register (to the right)');
gettext('Reg: 1-Bit register');
gettext('2-to-1 Multplexer (1-bit channels). Fippled version');
gettext('Bus4-Join-all: Join all the wires into a 4-bits Bus');
gettext('2-bits Syscounter');
gettext('Inc1-2bit: Increment a 2-bits number by one');
gettext('AdderK-2bit: Adder of 2-bit operand and 2-bit constant');
gettext('Generic: 2-bits generic constant (0,1,2,3)');
gettext('Adder-2bits: Adder of two operands of 2 bits');
gettext('Bus2-Split-all: Split the 2-bits bus into two wires');
gettext('Adder-1bit: Adder of two operands of 1 bit');
gettext('AdderC-1bit: Adder of two operands of 1 bit plus the carry in');
gettext('XOR gate: two bits input xor gate');
gettext('Bus2-Join-all: Joint two wires into a 2-bits Bus');
gettext('DFF-02: Two D flip-flops in paralell');
gettext('## Midiendo el bit 0 de un contador del sistema de 2-bits');
gettext('LEDOscopio');
gettext('Contador de 2 bits');
gettext('Bit  de menor peso  \ndel contador');
gettext('4-bits Shift register');
gettext('The input channel is captured  \non the register. One bit per  \nsystem clock');
gettext('RS FlipFlop initialized to 1');
gettext('while 1, the shift register  \nis capturing');
gettext('2-bits counter');
gettext('After 4 cycles the Flip-Flop is  \nreset and it stops capturing  \nbits');
gettext('As the 2-bits system counter is counting  \nall the time, the done signal is only  \ngenerated when the counter reaches the maximum  \nvalue and the Ledoscope is on (busy)');
gettext('Priority for the set');
gettext('Parameter: Initial value');
gettext('System clock');
gettext('Input data');
gettext('Output');
gettext('# D Flip-Flop  \n\nIt stores the input data that arrives at cycle n  \nIts output is shown in the cycle n+1');
gettext('Input');
gettext('Mux 2-1');
gettext('D Flip-flip\n(System)');
gettext('02-senales-constantes');
gettext('## Señal a');
gettext('## Señal b');
gettext('LEDOscopio 1');
gettext('LEDOscopio 2');
gettext('03-start-generation');
gettext('System - D Flip-flop. Capture data every system clock cycle');
gettext('Biestable D del sistema');
gettext('Valor que se captura  \na partir del segundo ciclo');
gettext('Inicializado a 1: su valor  \nen el ciclo inicial');
gettext('LEDOScopio de 4 LEDs');
gettext('## Ejemplo 2: Generación de una señal de start');
gettext('Señal de Start');
gettext('# D Flip-Flop  (system)\n\nIt stores the input data that arrives at cycle n  \nIts output is shown in the cycle n+1');
gettext('Not connected');
gettext('04-start-delay-1');
gettext('start: Start signal: It goes from 1 to 0 when the system clock starts. 1 cycle pulse witch');
gettext('Biestable D  \nsistema');
gettext('## Ejemplo 3: Retrasando la señal de start un ciclo');
gettext('Señal de  \nStart');
gettext('Señal de Start  \nretrasada 1 ciclo');
gettext('Señal a');
gettext('Señal b');
gettext('Initial value: 1');
gettext('Initial value: 0');
gettext('Falling edge');
gettext('05-start-delay-2');
gettext('## Ejemplo 5: Retrasando la señal de start dos ciclos');
gettext('Señal c');
gettext('Señal de Start  \nretrasada 2 ciclos');
gettext('06-pattern-generation-1');
gettext('## Ejemplo 6: Generando una señal patrón\n\nSe emiten los siguientes bits en los primeros cuatro ciclos de reloj:\n\n| Ciclo: | Ciclo 0 | Ciclo 1 | Ciclo 2 | Ciclo 3 |\n|--------|---------|---------|---------|---------|\n| Bit:   |    0    |   1     |    0    |    1    |\n');
gettext('07-not-operation');
gettext('Ledoscope. Capture the input signal during the first 8 cycles after circuit initialization');
gettext('3-bits Syscounter');
gettext('DFF-03: Three D flip-flops in paralell');
gettext('Bus3-Split-all: Split the 3-bits bus into three wires');
gettext('Bus3-Join-all: Joint three wires into a 3-bits Bus');
gettext('Inc1-3bit: Increment a 3-bits number by one');
gettext('AdderK-3bit: Adder of 3-bit operand and 3-bit constant');
gettext('Generic: 3-bits generic constant (0-7)');
gettext('Adder-3bits: Adder of two operands of 3 bits');
gettext('SReg-right-x8: 8 bits Shift register (to the right)');
gettext('Bus8-Join-half: Join the two same halves into an 8-bits Bus');
gettext('# Ejemplo 7: Inversión de una señal\n\nSe invierte la señal de start y se muestra en un LEDOscopio de 8 LEDs');
gettext('Señal de start  ');
gettext('Señal de start  \ninvertida');
gettext('LEDOscopio de 8 LEDs');
gettext('8-bits Shift register');
gettext('3-bits counter');
gettext('After 8 cycles the Flip-Flop is  \nreset and it stops capturing  \nbits');
gettext('08-or-operation');
gettext('# Ejemplo 8: Unión de dos señales\n\nObtención de un pulso de 2 ciclos de anchura que se activa en el ciclo 1.  \nSe construye a partir de una señal de start (a) a la que se le aplican  \nlas siguientes operaciones: `s = r(a + r(a)`  ');
gettext('Señal de start  `a`');
gettext('Sys-DFF');
gettext('`r(a)`');
gettext('Señal `a`  \nretrasada');
gettext('`a+r(a)`');
gettext('Unión de  \nseñales');
gettext('09-and-operation');
gettext('Sys-SregR-02: Two bits System Shift register to the right');
gettext('Sys-reg-02: Two bits system register');
gettext('SR1: Shift  a 2-bit value one bit right. MSB is filled with in');
gettext('# Ejemplo 9: Intersección de dos señales\n\nIntersección de dos señales: un pulso inicial de 2 ciclos con el mismo  \npulso retrasado 1 ciclo: `s = a.r(a)`  ');
gettext('Señal `a`');
gettext('Sys-SRegR');
gettext('`a.r(a)`');
gettext('Intersección de  \nseñales');
gettext('Combinational  \nShift-right');
gettext('10-xor-operation');
gettext('# Ejemplo 10: Diferencia (XOR) entre dos señales\n\nOperanción XOR entre dos señales: un pulso inicial de 2 ciclos con el mismo  \npulso retrasado 1 ciclo: `s = a xor r(a)`  ');
gettext('`a xor r(a)`');
gettext('Diferencia de  \nseñales');
gettext('11-sys-delay-x01');
gettext('Delay-tic-x1: The input tic is delayed 1 cycle');
gettext('# Ejemplo 11: Probando el bloque sys-delay-x01\n\nCircuito para retrasar el tic de entrada 1 ciclo');
gettext('Retrasar un ciclo');
gettext('Sys-Delay-x01');
gettext('Tic inicial');
gettext('Ciclo 0');
gettext('Ciclo 1');
gettext('Conectar la señal a medir');
gettext('Input signal');
gettext('Current working cycle: 0-1');
gettext('Delay 1 cycle');
gettext('Delay finished!');
gettext('Machine state: ON/OFF');
gettext('12-sys-delay-x02');
gettext('Delay-tic-x2: The input tic is delayed 2 cycle');
gettext('System TFF with toggle input: It toogles on every system cycle if the input is active');
gettext('# Sys-delay-x2: Manual testing\n\nThe starting 1-cycle pulse is delayed 2 cycles. It is meassured with the LedOscope  ');
gettext('Delay 2 cycles');
gettext('Sys-Delay-x02');
gettext('Starting pulse');
gettext('LEDOscope');
gettext('RS Flip-Flop');
gettext('Circuit state:  \n* ON: working (1)\n* OFF: Not working (0)');
gettext('1-bit counter');
gettext('Priority on set');
gettext('13-sys-delay-x02-impl-1');
gettext('Reg. desplaz.  \nde 2 bits');
gettext('# Ejemplo 13: Bloque sys-delay-x02. Implementación 1\n\nCircuito para retrasar dos ciclos un tic inicial. Esta es la primera implementación,  \nla más simple, usando un registro de desplazamiento de 2 bits  \nSólo hay señal de salida (done)\n');
gettext('14-sys-delay-x02-impl-2');
gettext('Biestable RS');
gettext('Estado del bloque');
gettext('# Ejemplo 14: Bloque sys-delay-x02. Implementación 2\n\nCircuito para retrasar dos ciclos un tic inicial. Esta es la segunda implementación,  \nque añade un Biestable RS con el estado del circuito para disponer de la señal `busy`.   \nLa señal `n` se obtiene como el bit menos significativo del registro de desplazamiento  \n');
gettext('15-sys-delay-x02-impl-3');
gettext('Contador de 1 bit');
gettext('# Ejemplo 15: Bloque sys-delay-x02. Implementación 3\n\nCircuito para retrasar dos ciclos un tic inicial. Esta es la tercera implementación, la definitiva.  \nSe usa un **Biestable RS** y **un contador de 1-bit**. El biestable RS se activa con `start` y  \nse apaga con `done`, que es la salida del contador. La señal `n` es la misma que `done`');
gettext('16-sys-delay-x04');
gettext('Delay-tic-x4: The input tic is delayed 4 cycle');
gettext('Counter-x02: 2-bits counter');
gettext('Generic component with clk input');
gettext('Retrasar 4 ciclos');
gettext('Sys-Delay-x04');
gettext('# Ejemplo 16: Probando el Bloque sys-delay-x04\n\nEl tic inicial se retrasa 4 ciclos');
gettext('Current working cycle: 0-3');
gettext('17-sys-delay-x08');
gettext('Sys-Delay-x8: The input tic is delayed 8 cycle');
gettext('Counter-x03: 3-bits counter');
gettext('Reg-x03: 3-bits register');
gettext('Ledoscope. Capture the input signal during the first 16 cycles after circuit initialization');
gettext('Bus16-Join-half: Join the two same halves into an 16-bits Bus');
gettext('4-bits Syscounter');
gettext('DFF-04: Three D flip-flops in paralell');
gettext('Bus4-Split-all: Split the 4-bits bus into its wires');
gettext('Inc1-4bit: Increment a 4-bits number by one');
gettext('AdderK-4bit: Adder of 4-bit operand and 4-bit constant');
gettext('Generic: 4-bits generic constant (0-15)');
gettext('Adder-4bits: Adder of two operands of 4 bits');
gettext('Display16-8: Display a 16-bits value on an  8-LEDs. The sel input selects the byte to display ');
gettext('2-to-1 Multplexer (8-bit channels)');
gettext('2-to-1 Multplexer (4-bit channels)');
gettext('Bus8-Split-half: Split the 8-bits bus into two buses of the same size');
gettext('Bus16-Split-half: Split the 16-bits bus into two buses of the same size');
gettext('Counter-x01: 1-bit counter');
gettext('Button-tic: Configurable button that emits a tic when it is pressed');
gettext('Rising-edge detector. It generates a 1-period pulse (tic) when a rising edge is detected on the input');
gettext('Configurable button (pull-up on/off. Not on/off)');
gettext('FPGA internal pull-up configuration on the input port');
gettext('Remove the rebound on a mechanical switch');
gettext('1bit register (implemented in verilog)');
gettext('16-bits Syscounter with reset');
gettext('DFF-rst-x16: 16 D flip-flops in paralell with reset');
gettext('DFF-rst-x04: Three D flip-flops in paralell with reset');
gettext('DFF-rst-x01: D Flip flop with reset input. When rst=1, the DFF is 0');
gettext('Bus16-Split-quarter: Split the 16-bits bus into four buses of the same size');
gettext('Bus16-Join-quarter: Join the four same buses into an 16-bits Bus');
gettext('Inc1-16bit: Increment a 16-bits number by one');
gettext('AdderK-16bit: Adder of 16-bit operand and 16-bit constant');
gettext('Generic: 16-bits generic constant');
gettext('Adder-16bits: Adder of two operands of 16 bits');
gettext('Adder-8bits: Adder of two operands of 8 bits');
gettext('AdderC-4bits: Adder of two operands of 4 bits and Carry in');
gettext('AdderC-8bits: Adder of two operands of 8 bits and Carry in');
gettext('Edges detector. It generates a 1-period pulse (tic) when either a rising edge or a falling edge is detected on the input');
gettext('Sync 1-bit input with the system clock domain');
gettext('Select positive or negative logic for the input (0=positive, 1=negative)');
gettext('1-bit generic constant (0/1)');
gettext('Retrasar 8 ciclos');
gettext('Sys-Delay-x08');
gettext('LEDOscope 16-bits');
gettext('# Ejemplo 17: Probando el Bloque sys-delay-x08\n\nEl tic inicial se retrasa 8 ciclos');
gettext('Display 16-8');
gettext('Seleccionar ventana de datos  \na visualizar (0-1)');
gettext('Current working cycle: 0-7');
gettext('4-bits counter');
gettext('Channel B');
gettext('Channel A');
gettext('Button state signal');
gettext('Tic: button pressed');
gettext('Rising edge detector');
gettext('Pull up on/off');
gettext('Not on/off');
gettext('## Rising edge detector\n\nIt generates a 1-period pulse (tic) when a rising edge is detected on the  \ninput signal');
gettext('Current signal  \nstate');
gettext('Signal state in the previous  \nclock cycle');
gettext('If the current signal is 1 and its value in  \nthe previous clock cycle was 0, it means  \nthat a rising edge has been detected!  \nThe output es 1\n\nIn any other case the output is 0');
gettext('**Delay**: 0 clock cycles \n\nThere is no delay between the arrival of a rising edge  \nand its detection');
gettext('Internal pull-up  \n* 0: OFF\n* 1: ON');
gettext('Synchronization stage');
gettext('Normalization stage\n\n* 0: Wire\n* 1: signal inverted');
gettext('Debouncing stage');
gettext('### Pull-up parameter:\n\n0: No pull-up  \n1: Pull-up activated');
gettext('Only an FPGA pin can  \nbe connected here!!!');
gettext('The pull-up is connected  \nby default');
gettext('Edge detector');
gettext('Whenever there is a change in  \nthe input, the counter is started');
gettext('If the counter reaches it maximum  \nvalue, the input is considered stable  \nand it is captured');
gettext('### Time calculation\n\nFor CLK=12MHZ, a 16-bit counter reaches its  \nmaximum every 2 ** 16 * 1/F = 5.5ms aprox  \nIF more time is needed for debouncing,  \nuse a counter with more bits (17, 18...)');
gettext('## Debouncer  \n\nA value is considered stable when  \nthere is no changes during 5.5ms  \naprox. When a value is stable it is  \ncaptured on the output flip-flop');
gettext('Stable output');
gettext('Counter');
gettext('Initial value');
gettext('Reset input: Active high  \nWhen rst = 1, the DFF is reset to 0');
gettext('Data input');
gettext('Initial default  \nvalue: 0');
gettext('## Edges detector\n\nIt generates a 1-period pulse (tic) when an edge (Rising or falling) is detected on the  \ninput signal');
gettext('The output is 1 if the current value is 1 and the  \nprevious 0, or if the current value is 0 and the  \nprevious 1\n');
gettext('In any other case the output is 0');
gettext('When k=0, it works like a wire  \n(The output is equal to the input)  \nWhen k=1, it act as a not gate\n(The output is the inverse of the input)');
gettext('### Truth table for XOR\n\n| k | input | output | function |\n|---|-------|--------|----------|\n| 0 | 0     |  0     | wire     |\n| 0 | 1     |  1     | wire     |\n| 1 | 0     |  1     | Not      |\n| 1 | 1     |  0     | Not      |');
gettext('18-sys-delay-xN-3-ciclos');
gettext('Sys-Delay-xN-2bits: The input tic is delayed N cycles');
gettext('Counter-M-x02: 2-bits M module counter with reset');
gettext('Comp2-2bit: Comparator of two 2-bit numbers');
gettext('Comp2-1bit: Comparator of two 1-bit numbers');
gettext('Reg-rst-02: Two bits Register with load and reset inputs');
gettext('2-to-1 Multplexer (2-bit channels)');
gettext('Sys-reg-rst-02: Two bits system register with reset');
gettext('Retrasar 3 ciclos');
gettext('2bits: Sys-Delay-xN');
gettext('# Ejemplo 18: Generando un retraso de 3 ciclos\n\nEl tic inicial se retrasa 3 ciclos');
gettext('Current working cycle: 1-3');
gettext('Cycles to delay');
gettext('The counter has reached  \nthe number of cycles  \nto delay');
gettext('2-bits Comparator');
gettext('Maximum count  \nreached');
gettext('2-bits register');
gettext('If the max count is reached  \nand the cnt tic is received,  \nthe register is reset to 0');
gettext('External reset');
gettext('A');
gettext('B');
gettext('19-sys-delay-xN-5-ciclos');
gettext('Sys-Delay-xN-3bits: The input tic is delayed N cycles');
gettext('2-to-1 Multplexer (3-bit channels)');
gettext('Comp2-3bit: Comparator of two 3-bit numbers');
gettext('Three bits input And gate');
gettext('Retrasar 5 ciclos');
gettext('3bits: Sys-Delay-xN');
gettext('# Ejemplo 19: Generando un retraso de 5 ciclos\n\nEl tic inicial se retrasa 5 ciclos');
gettext('3-bits Comparator');
gettext('20-sys-delay-xN-K.5-ciclos');
gettext('Sys-Delay-xN-K: The input tic is delayed N cycles');
gettext('# Ejemplo 20: Generando un retraso de 5 ciclos\n\nEl tic inicial se retrasa 5 ciclos');
gettext('Sys-Delay-xN');
gettext('21-two-cycles-pulse');
gettext('# Ejemplo 21: Generando un pulso de 2 ciclos de anchura\n\nEsquema básico para generar un pulso de 2 ciclos de anchura, que medimos con el LEDOscopio');
gettext('22-N-cycles-pulse');
gettext('# Ejemplo 22: Generando un pulso de N ciclos de anchura\n');
gettext('N ciclos de retraso');
gettext('23-retardo-500ns');
gettext('Unit-ns-3bits: ns to cycles converter. Max value: 583 ns (7 cycles)');
gettext('# Ejemplo 23: Retardo de 500ns\n\nGenerar un pulso de 500ns de anchura\n');
gettext('Convert fron ns  \nto cycles');
gettext('Input parameter: Nanoseconds  \n* Max value: 583 ns (7 cycles)');
gettext('Input parameter:  \nSystem Frequency');
gettext('24-rising-edge');
gettext('# Ejemplo 24: Detección de flancos de subida de una señal\n\nSe genera una señal formada por un pulso de 3 ciclos seguido de uno de 2 ciclos, y se  \ndetectan sus flancos de subida');
gettext('Generar un pulso de  \n3 ciclos de anchura');
gettext('Señan de  \nentrada');
gettext('Rising-Edge');
gettext('Detección de  \nflancos de subida');
gettext('Medición con LEDOscopio');
gettext('Generar un pulso de  \n2 ciclos de anchura');
gettext('25-rising-edge-tic');
gettext('# Ejemplo 25: Detección de flancos de subida de un tic\n\nEl retraso del componente Rising-edge es 0. Esto significa que si se lo aplicamos a un tic, obtenemos  \nel mismo tic');
gettext('tic inicial ');
gettext('Flanco del tic');
gettext('26-rising-edge-tic');
gettext('Falling-edge detector. It generates a 1-period pulse (tic) when a falling edge is detected on the input');
gettext('# Ejemplo 26: Detección de flancos de bajada de una señal\n\nSe genera una señal formada por un pulso de 3 ciclos seguido de uno de 2 ciclos, y se  \ndetectan sus flancos de bajada');
gettext('Falling-Edge');
gettext('Detección de  \nflancos de bajada');
gettext('## Falling edge detector\n\nIt generates a 1-period pulse (tic) when a falling edge is detected on the  \ninput signal');
gettext('If the current signal is 0 and its value in  \nthe previous clock cycle was 1, it means  \nthat a falling edge has been detected!  \nThe output es 1\n\nIn any other case the output is 0');
gettext('**Delay**: 0 clock cycles \n\nThere is no delay between the arrival of a falling edge  \nand its detection');
gettext('27-falling-edge-tic');
gettext('# Ejemplo 27: Detección de flancos de bajada de un tic\n\nEl retraso del componente Falling-edge es 0: El flanco se detecta en cuanto aparece. PERO  \nEsto sucede en el ciclo siguiente al flanco de subida');
gettext('28-edge-detection');
gettext('# Ejemplo 28: Detección de todos los flancos de una señal\n\nSe genera una señal formada por un pulso de 3 ciclos seguido de uno de 2 ciclos, y se  \ndetectan sus flancos de subida y bajada');
gettext('Edges');
gettext('Detección de  \nflancos de subida y  \nbajada');
gettext('29-edge-detection-tic');
gettext('# Ejemplo 29: Detección de flancos de un tic\n');
gettext('Detección de  \nflancos');
gettext('Flancos del tic');
